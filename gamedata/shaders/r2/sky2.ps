#include "common.h"

struct         v2p
{
        float4        	factor:     COLOR0          ;        // for SM3 - factor.rgb - tonemap-prescaled
        float3        	tc0:        TEXCOORD0       ;
        float3        	tc1:        TEXCOORD1		;
};
struct        _out
{
        float4        	low: 		COLOR0;
        float4        	high:		COLOR1;
};


uniform samplerCUBE     s_sky0      : register(s0)	;
uniform samplerCUBE     s_sky1      : register(s1)	;

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel

_out         main               ( v2p I )
{
        float3         	s0  	= texCUBE        (s_sky0,I.tc0);
        float3         	s1      = texCUBE        (s_sky1,I.tc1);
        float3        	sky     = I.factor*lerp  (s0,s1,I.factor.w);

        // final tone-mapping
        _out        	o;
		o.low        	=		( (sky*(1+sky/2.89)) / (sky+1) ).xyzz;
		o.high        	=		o.low /def_hdr	;
        return        	o;
}
