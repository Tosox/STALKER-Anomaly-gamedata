class "se_level_changer" (cse_alife_level_changer)
--------------------
function se_level_changer:__init(section) super (section)
end
--------------------
function se_level_changer:on_register()
	cse_alife_level_changer.on_register(self)
	SendScriptCallback("server_entity_on_register",self,"se_level_changer")
end
--------------------
function se_level_changer:on_unregister()
	SendScriptCallback("server_entity_on_unregister",self,"se_level_changer")
	cse_alife_level_changer.on_unregister(self)
end
--------------------
function se_level_changer:STATE_Write(packet)
	cse_alife_level_changer.STATE_Write(self, packet)

	set_save_marker(packet, "save", false, "se_level_changer")
	
	packet:w_bool(self.enabled and true or false)
	packet:w_stringZ(tostring(self.hint))
	
	set_save_marker(packet, "save", true, "se_level_changer")
end
--------------------
function se_level_changer:STATE_Read(packet, size)
	cse_alife_level_changer.STATE_Read(self, packet, size)
	-- под LevelEditor не пытаться читать из пакета ничего
	if editor() then
		return
	end

	set_save_marker(packet, "load", false, "se_level_changer")

	self.enabled = packet:r_bool() == true or nil

	local hint = packet:r_stringZ()
	if (hint ~= "" and hint ~= "nil") then
		self.hint = hint
	end
	set_save_marker(packet, "load", true, "se_level_changer")
end